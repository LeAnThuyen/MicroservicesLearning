version: '3.8'

services:
 
  sqlserverdb:
    container_name: sqlserverdb
    environment:
      SA_PASSWORD: "PassW0rd!"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_data:/var/lib/sqlserver/data
    ports:
       - "1435:1433"
  mysqldb:
    container_name: mysql_data
    environment:
      MYSQL_ROOT_PASSWORD: "PassW0rd!"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysqlserver
    ports:
       - "3306:3306"
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "PassW0rd!"
      ACCEPT_EULA: "Y"
    restart: always
    volumes:
      - sqlserver_data:/var/lib/sqlserver/data


  productdb:
    container_name: productdb
    environment:
      MYSQL_ROOT_PASSWORD: "PassW0rd!"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql

  customerdb:
    container_name: customerdb
    environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=admin1234
     - POSTGRES_DB=DiscountDb
    restart: always
    volumes:
      - postgres_data:/var/lib/postgressql/data
    ports:
       - "5432:5432"

  basketdb:
    container_name: basketdb
    restart: always
    ports:
       - "5433:5432"

  inventorydb:
    container_name: inventorydb
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
       - "27017:27017"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
       - "5672:5672"
       - "15672:15672"

  pgadmin:
    container_name: pgadmin
    environment:
     - PGADMIN_DEFAULT_EMAIL=admin@tedu_microservice.com
     - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    volumes:
      - pgadmin_data:/root/.pgadmin
    ports:
       - "5050:80"

  portainer:
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
       - "8080:8080"
       - "9000:9000"

  elasticsearch:
    container_name: elasticsearch
    environment:
     - xpack.mornitoring.enable=true
     - xpack.watcher.enable=false
     - discovery.type=single-node
    restart: always
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch_data/data
    ports:
       - "9200:9200"
   
  kibana:
    container_name: kibana
    environment:
     - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on: 
    - elasticsearch
    restart: always
    ports:
       - "5601:5601"

  
 # Microservice sections
  product.api:
    container_name: product.api
    environment:
        - ASPNETCORE_ENVIROMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - "ConnectionStrings:DefaultConnectionString=Server=productdb;Port=3306;Database=productdb;Uid=root;Pwd=PassW0rd!;"
    depends_on:
        - productdb
    ports:
         - "6002:80"
    restart: always

   